name: CMake

on: [pull_request]


jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
       matrix:
         build_type: [Release, Debug]

    steps:
    - uses: actions/checkout@v2

    - name: Install Newer CMake
      env:
        CMAKE_URL: "https://cmake.org/files/v3.17/cmake-3.17.0-Linux-x86_64.tar.gz"
        CMAKE_PREFIX: ${{runner.workspace}}/install/cmake
      run: mkdir -p ${{runner.workspace}}/install/cmake &&
           wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C ${CMAKE_PREFIX} &&
           export PATH=${CMAKE_PREFIX}/bin:${PATH} && cmake --version

    - name: Build MPICH
      run: sudo apt-get install mpich libmpich-dev

    - name: Build NETLIB ScaLAPACK
      env:
        SCALAPACK_PREFIX: ${{runner.workspace}}/install/scalapack
        SCALAPACK_BIN_DIR: ${{runner.workspace}}/deps/scalapack
      run: .github/workflows/scripts/build_scalapack.sh ${SCALAPACK_PREFIX} ${SCALAPACK_BIN_DIR} 

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      env:
        BUILD_TYPE: ${{matrix.build_type}}
        MPICH_PREFIX: ${{runner.workspace}}/install/mpich
        SCALAPACK_PREFIX: ${{runner.workspace}}/install/scalapack
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_PREFIX_PATH="${MPICH_PREFIX};${SCALAPACK_PREFIX}"

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
